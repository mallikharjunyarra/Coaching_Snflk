CREATE OR REPLACE TABLE HRDATA.SAMPLE_TRAN(id INT);

-- Procedure without a transaction
CREATE OR REPLACE PROCEDURE EMP.PROCS.SP_TRANSACTION_CONTROL_DEMO1()
RETURNS VARCHAR
LANGUAGE SQL
EXECUTE AS CALLER
AS
    
BEGIN
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES(100);
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES(200);
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES(300);
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES('ABC');
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES(500);

    RETURN 'Successful';

END;

CALL EMP.PROCS.SP_TRANSACTION_CONTROL_DEMO1();

SELECT * FROM HRDATA.SAMPLE_TRAN;

------------------------------

CREATE OR REPLACE TABLE HRDATA.SAMPLE_TRAN(id INT);

-- Procedure with a transaction
CREATE OR REPLACE PROCEDURE EMP.PROCS.SP_TRANSACTION_CONTROL_DEMO2()
RETURNS VARCHAR
LANGUAGE SQL
EXECUTE AS CALLER
AS
    
BEGIN

INSERT INTO HRDATA.SAMPLE_TRAN VALUES(100);

BEGIN TRANSACTION;
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES(200);
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES(300);
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES('ABC');
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES(500);
COMMIT;

INSERT INTO HRDATA.SAMPLE_TRAN VALUES(600);

RETURN 'Successful';

END;

CALL EMP.PROCS.SP_TRANSACTION_CONTROL_DEMO2();

SELECT * FROM HRDATA.SAMPLE_TRAN;

-------------------
CREATE OR REPLACE TABLE HRDATA.SAMPLE_TRAN(id INT);

-- Stop the procedure from failing, handle the exception
CREATE OR REPLACE PROCEDURE EMP.PROCS.SP_TRANSACTION_CONTROL_DEMO3()
RETURNS VARCHAR
LANGUAGE SQL
EXECUTE AS CALLER
AS
    
BEGIN

INSERT INTO HRDATA.SAMPLE_TRAN VALUES(100);

BEGIN TRANSACTION;
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES(200);
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES(300);
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES('ABC');
	INSERT INTO HRDATA.SAMPLE_TRAN VALUES(500);
COMMIT;

INSERT INTO HRDATA.SAMPLE_TRAN VALUES(600);

RETURN 'Successful';

EXCEPTION 
    WHEN OTHER THEN
        ROLLBACK;
        RETURN 'Procedure failed and the changes rolled back';

END;

CALL EMP.PROCS.SP_TRANSACTION_CONTROL_DEMO3();

SELECT * FROM HRDATA.SAMPLE_TRAN;